name: Deploy to Firebase Hosting

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  FLUTTER_VERSION: '3.32.4'
  FIREBASE_PROJECT_ID: flashcards-521f0

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Analyze code
        run: flutter analyze --no-fatal-infos

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Bump version
        run: ./scripts/bump_version.sh

      - name: Build web app
        run: flutter build web --source-maps

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_FLASHCARDS }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ${{ env.FIREBASE_PROJECT_ID }}
        
      - name: Deploy to Firebase Hosting
        run: npx firebase-tools@latest deploy --only hosting --project ${{ env.FIREBASE_PROJECT_ID }}

      - name: Create Remote Config JSON
        run: |
          cat > remote_config.json << EOF
          {
            "conditions": [
              {
                "name": "Default",
                "expression": "true",
                "tagColor": "BLUE"
              }
            ],
            "parameters": {
              "app_version": {
                "defaultValue": {
                  "value": "$VERSION_NUMBER"
                },
                "description": "Current app version (semantic versioning)",
                "valueType": "STRING"
              },
              "app_build_number": {
                "defaultValue": {
                  "value": "$BUILD_NUMBER"
                },
                "description": "Current app build number",
                "valueType": "STRING"
              },
              "update_message": {
                "defaultValue": {
                  "value": "New version available with latest features and improvements!"
                },
                "description": "Custom message shown to users when update is available",
                "valueType": "STRING"
              },
              "update_required": {
                "defaultValue": {
                  "value": "false"
                },
                "description": "Whether the update is required (true) or optional (false)",
                "valueType": "STRING"
              }
            }
          }
          EOF
          
          echo "Created Remote Config JSON for version $VERSION_NUMBER+$BUILD_NUMBER"

      - name: Update Firebase Remote Config
        run: |
          curl -X PUT \
            -H "Authorization: Bearer $(gcloud auth print-access-token)" \
            -H "Content-Type: application/json" \
            -d @remote_config.json \
            "https://firebaseremoteconfig.googleapis.com/v1/projects/${{ env.FIREBASE_PROJECT_ID }}/remoteConfig"
          
          echo "Updated Firebase Remote Config successfully"

      - name: Create deployment summary
        run: |
          echo "## üöÄ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: $VERSION_NUMBER" >> $GITHUB_STEP_SUMMARY
          echo "- **Build**: $BUILD_NUMBER" >> $GITHUB_STEP_SUMMARY
          echo "- **Project**: ${{ env.FIREBASE_PROJECT_ID }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: Production" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: Push to main branch" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üîó Links" >> $GITHUB_STEP_SUMMARY
          echo "- [Live Site](https://${{ env.FIREBASE_PROJECT_ID }}.web.app)" >> $GITHUB_STEP_SUMMARY
          echo "- [Firebase Console](https://console.firebase.google.com/project/${{ env.FIREBASE_PROJECT_ID }})" >> $GITHUB_STEP_SUMMARY
          echo "- [Remote Config](https://console.firebase.google.com/project/${{ env.FIREBASE_PROJECT_ID }}/remoteConfig)" >> $GITHUB_STEP_SUMMARY

      - name: Notify deployment
        if: success()
        run: |
          echo "‚úÖ Deployment completed successfully!"
          echo "üåê Live site: https://${{ env.FIREBASE_PROJECT_ID }}.web.app"
          echo "üì± Version $VERSION_NUMBER+$BUILD_NUMBER is now live" 