name: Deploy to Firebase Hosting

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  FLUTTER_VERSION: '3.32.4'
  FIREBASE_PROJECT_ID: flashcards-521f0

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Generate code
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Run tests
        run: flutter test

      - name: Analyze code
        run: flutter analyze --no-fatal-infos

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Generate code
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Install yq for YAML parsing
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Align versions from changelog
        run: |
          chmod +x scripts/update_versions.sh
          ./scripts/update_versions.sh

      - name: Build web app
        run: flutter build web --release

      - name: Deploy Firebase Remote Config and Hosting
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_FLASHCARDS }}' > /tmp/firebase-service-account.json
          npx firebase-tools@latest deploy --only remoteconfig,hosting --project ${{ env.FIREBASE_PROJECT_ID }}
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/firebase-service-account.json

      - name: Create deployment summary
        run: |
          # Extract version and build number from pubspec.yaml
          VERSION_NUMBER=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)
          BUILD_NUMBER=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f2)
          
          echo "## üöÄ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: $VERSION_NUMBER" >> $GITHUB_STEP_SUMMARY
          echo "- **Build**: $BUILD_NUMBER" >> $GITHUB_STEP_SUMMARY
          echo "- **Project**: ${{ env.FIREBASE_PROJECT_ID }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: Production" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: Push to main branch" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üîó Links" >> $GITHUB_STEP_SUMMARY
          echo "- [Live Site](https://${{ env.FIREBASE_PROJECT_ID }}.web.app)" >> $GITHUB_STEP_SUMMARY
          echo "- [Firebase Console](https://console.firebase.google.com/project/${{ env.FIREBASE_PROJECT_ID }})" >> $GITHUB_STEP_SUMMARY
          echo "- [Remote Config](https://console.firebase.google.com/project/${{ env.FIREBASE_PROJECT_ID }}/remoteConfig)" >> $GITHUB_STEP_SUMMARY

      - name: Notify deployment
        if: success()
        run: |
          VERSION_NUMBER=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)
          BUILD_NUMBER=$(grep '^version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f2)
          echo "‚úÖ Deployment completed successfully!"
          echo "üåê Live site: https://${{ env.FIREBASE_PROJECT_ID }}.web.app"
          echo "üì± Version $VERSION_NUMBER+$BUILD_NUMBER is now live" 